name: Build and Release

on:
  push:
    tags:
      - 'v*' # Trigger on version tags (v1.0.0, v2.1.3, etc.)

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact_name: program
            asset_name: program-linux
          - os: macos-latest
            platform: macos
            artifact_name: program
            asset_name: program-macos
          - os: windows-latest
            platform: windows
            artifact_name: program.exe
            asset_name: program-windows.exe

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release
        
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release
      
    - name: Create artifact directory
      run: mkdir -p ${{github.workspace}}/artifacts
      shell: bash
      
    - name: Copy executable (Windows)
      if: matrix.os == 'windows-latest'
      run: copy ${{github.workspace}}\build\Release\${{ matrix.artifact_name }} ${{github.workspace}}\artifacts\
      shell: cmd
      
    - name: Copy executable (Unix)
      if: matrix.os != 'windows-latest'
      run: cp ${{github.workspace}}/build/${{ matrix.artifact_name }} ${{github.workspace}}/artifacts/
      shell: bash

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: ${{github.workspace}}/artifacts/${{ matrix.artifact_name }}
        retention-days: 1
        
  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Display structure of downloaded files
      run: ls -R artifacts
      shell: bash
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/program-linux/program
          artifacts/program-macos/program
          artifacts/program-windows.exe/program.exe
        draft: false
        prerelease: false
        generate_release_notes: true
