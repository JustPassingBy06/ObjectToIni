name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt update && sudo apt install -y cmake g++

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: choco install cmake ninja

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake

      - name: Configure CMake
        run: |
            cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=$GITHUB_WORKSPACE/build

      - name: Build
        run: cmake --build build --config Release

      - name: Package Executable
        run: |
            mkdir -p artifacts
            if [ "$RUNNER_OS" = "Linux" ]; then cp build/your_executable artifacts/your_executable_linux; fi
            if [ "$RUNNER_OS" = "Windows" ]; then cp build/Release/your_executable.exe artifacts/your_executable_windows.exe; fi
            if [ "$RUNNER_OS" = "macOS" ]; then cp build/your_executable artifacts/your_executable_mac || cp build/Release/your_executable artifacts/your_executable_mac; fi
        shell: bash

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Executables-${{ matrix.os }}
          path: artifacts/*

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/**/*
