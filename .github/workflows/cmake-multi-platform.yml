jobs:
  release:
    needs: build
    runs-on: ubuntu-latest  # You can specify any runner here; it will create the release after the build

    permissions:
      contents: write  # Grant permission to create releases and upload assets
      id-token: write  # Allow generation of release tags

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0  # Replace with your dynamic versioning logic, e.g., `${{ github.sha }}`
          release_name: "Release v1.0.0"
          body: 'Release description'
          draft: false  # Set to true if you want to create a draft release
          prerelease: false  # Set to true for pre-releases
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Pass the token explicitly

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/your-binary-file  # Path to the compiled binary
          asset_name: your-binary-file  # Name it as you want it to appear on the release page
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Pass the token explicitly
