name: Build and Release C++ Executables

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}

    - name: Build project
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: List build directory (Debugging)
      run: ls -R build

    - name: Rename Executable (Windows)
      if: matrix.os == 'windows-latest'
      run: mv build/my_project.exe build/my_project-windows.exe

    - name: Rename Executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: mv build/my_project build/my_project-linux

    - name: Rename Executable (macOS)
      if: matrix.os == 'macos-latest'
      run: mv build/my_project build/my_project-macos

    - name: Upload Executable
      uses: actions/upload-artifact@v4
      with:
        name: executable-${{ matrix.os }}
        path: build/my_project-*
  
  release:
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all executables
      uses: actions/download-artifact@v4
      with:
        path: build_artifacts

    - name: List downloaded files (Debugging)
      run: ls -R build_artifacts

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ github.run_number }}
        release_name: "Release v${{ github.run_number }}"
        body: "Automatically generated release with executables for all platforms."
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Windows Executable
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build_artifacts/executable-windows-latest/my_project-windows.exe
        asset_name: my_project-windows.exe
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Linux Executable
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build_artifacts/executable-ubuntu-latest/my_project-linux
        asset_name: my_project-linux
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload macOS Executable
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build_artifacts/executable-macos-latest/my_project-macos
        asset_name: my_project-macos
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
